[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "danmu-tts"
version = "1.0.0"
description = "High-performance TTS server for live streaming"
readme = "README.md"
requires-python = ">=3.9,<3.12"
license = {text = "MIT"}
authors = [
    {name = "isomo", email = "jiahaoxiang2000@gmail.com"},
]
keywords = ["tts", "text-to-speech", "live-streaming", "ai", "gpu"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

dependencies = [
    # Core web framework
    "fastapi>=0.104.1,<0.105.0",
    "uvicorn[standard]>=0.24.0,<0.25.0",
    "websockets>=12.0,<13.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "PyYAML>=6.0.1,<7.0.0",
    
    # Audio processing
    "librosa>=0.10.1,<0.11.0",
    "soundfile>=0.12.1,<0.13.0",
    "numpy>=1.24.3,<2.0.0",
    "scipy>=1.11.4,<2.0.0",
    
    # TTS backends
    "edge-tts>=6.1.9,<7.0.0",
    "piper-tts>=1.2.0,<2.0.0",
    
    # Caching and utilities
    "aiofiles>=23.2.1,<24.0.0",
    "httpx>=0.25.2,<0.26.0",
    "python-multipart>=0.0.6,<0.1.0",
]

[project.optional-dependencies]
# GPU acceleration (CUDA) - separate group due to platform specificity
gpu = [
    "torch>=2.0.0,<3.0.0",
    "torchaudio>=2.0.0,<3.0.0",
    "TTS>=0.22.0,<1.0.0",
]

# Cloud TTS services - optional
cloud = [
    "azure-cognitiveservices-speech>=1.34.0,<2.0.0",
    "openai>=1.3.8,<2.0.0",
]

# Caching backends - optional
cache = [
    "redis>=5.0.1,<6.0.0",
]

# Development tools
dev = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "black>=23.11.0,<24.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.7.0,<2.0.0",
]

# Complete installation with all features
all = [
    "danmu-tts[gpu,cloud,cache,dev]",
]

[project.urls]
Homepage = "https://github.com/jiahaoxiang2000/danmu-tts"
Documentation = "https://github.com/jiahaoxiang2000/danmu-tts#readme"
Repository = "https://github.com/jiahaoxiang2000/danmu-tts"
Issues = "https://github.com/jiahaoxiang2000/danmu-tts/issues"

[project.scripts]
danmu-tts = "app:main"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
]
